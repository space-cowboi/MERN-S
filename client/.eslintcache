[{"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\index.js":"1","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\App.js":"2","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Landing.js":"3","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\auth\\Login.js":"5","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\store.js":"7","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\index.js":"8","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\alert.js":"9","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\types.js":"10","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\alert.js":"11","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\auth.js":"13","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\auth.js":"14","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\profile.js":"18","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\profile.js":"19","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\utils\\api.js":"21","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\post.js":"22"},{"size":197,"mtime":1610837645092,"results":"23","hashOfConfig":"24"},{"size":1356,"mtime":1611207364761,"results":"25","hashOfConfig":"24"},{"size":1089,"mtime":1611202174835,"results":"26","hashOfConfig":"24"},{"size":1280,"mtime":1611201953473,"results":"27","hashOfConfig":"24"},{"size":1866,"mtime":1611019499647,"results":"28","hashOfConfig":"24"},{"size":3244,"mtime":1611011932202,"results":"29","hashOfConfig":"24"},{"size":387,"mtime":1610943355833,"results":"30","hashOfConfig":"24"},{"size":199,"mtime":1611196111610,"results":"31","hashOfConfig":"24"},{"size":388,"mtime":1610945572323,"results":"32","hashOfConfig":"24"},{"size":573,"mtime":1611209043914,"results":"33","hashOfConfig":"24"},{"size":393,"mtime":1610947605094,"results":"34","hashOfConfig":"24"},{"size":484,"mtime":1610947014582,"results":"35","hashOfConfig":"24"},{"size":2078,"mtime":1611209346012,"results":"36","hashOfConfig":"24"},{"size":1095,"mtime":1611014537869,"results":"37","hashOfConfig":"24"},{"size":251,"mtime":1611210033569,"results":"38","hashOfConfig":"24"},{"size":1024,"mtime":1611207764156,"results":"39","hashOfConfig":"24"},{"size":729,"mtime":1611206430372,"results":"40","hashOfConfig":"24"},{"size":746,"mtime":1611207988112,"results":"41","hashOfConfig":"24"},{"size":567,"mtime":1611210057324,"results":"42","hashOfConfig":"24"},{"size":298,"mtime":1611202466955,"results":"43","hashOfConfig":"24"},{"size":636,"mtime":1611208202926,"results":"44","hashOfConfig":"24"},{"size":3267,"mtime":1609901761675,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8uf5tw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\index.js",[],["97","98"],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\App.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\auth\\Login.js",["99"],"import React, { Fragment, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n      e.preventDefault();\r\n      login(email, password);\r\n    };\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n\r\n  return ( <Fragment>\r\n          <h1 className=\"large text-primary\">Sign In</h1>\r\n          <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n          <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n              <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"password\" placeholder=\"Password\" name=\"password\" minLength=\"6\" value={password} onChange={e => onChange(e)} required />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Don't have an account? <Link to='/register'>Sign Up</Link>\r\n          </p>\r\n  </Fragment>);\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\auth\\Register.js",["100"],"import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n      // const newUser = {\r\n      //   name,\r\n      //   email,\r\n      //   password\r\n      // }\r\n      // try {\r\n      //   const config = {\r\n      //     headers: {\r\n      //       'Content-Type': 'application/json'\r\n      //     }\r\n      //   }\r\n      //\r\n      //   const body = JSON.stringify(newUser);\r\n      //\r\n      //   const res = await axios.post('/api/users', body, config);\r\n      //   console.log(res.data);\r\n      // } catch (err) {\r\n      //   console.error(err.response.data);\r\n      // }\r\n    }\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dasboard\" />;\r\n  }\r\n\r\n  return ( <Fragment>\r\n          <h1 className=\"large text-primary\">Sign Up</h1>\r\n          <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n          <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} required />\r\n              <small className=\"form-text\"\r\n                >This site uses Gravatar so if you want a profile image, use a\r\n                Gravatar email</small\r\n              >\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"password\" placeholder=\"Password\" name=\"password\" minLength=\"6\" value={password} onChange={e => onChange(e)} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"password\" placeholder=\"Confirm Password\" name=\"password2\" minLength=\"6\" value={password2} onChange={e => onChange(e)} required />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Already have an account? <Link to='/login'>Sign In</Link>\r\n          </p>\r\n  </Fragment>);\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\store.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\index.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\alert.js",["101"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types'\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\types.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\alert.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\auth.js",["102"],"import axios from 'axios';\r\n//import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n } from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load user\r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login user\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear profile\r\nexport const logout = () => dispatch => {\r\n  //dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\dashboard\\Dashboard.js",["103","104"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Dashboard = ({ getCurrentProfile, auth: {user}, profile: { profile, loading } }) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  return (<Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>\r\n        Welcome { user && user.name }\r\n      </p>\r\n      {profile !== null ? <Fragment>has</Fragment> : <Fragment>has not</Fragment>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\reducers\\profile.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\profile.js",["105"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE } from './types';\r\n\r\n//Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\utils\\api.js",[],"C:\\Users\\Cameron\\Documents\\mern_udemy\\client\\src\\actions\\post.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":5,"column":1,"nodeType":"116","endLine":16,"endColumn":2},{"ruleId":"110","severity":1,"message":"117","line":12,"column":3,"nodeType":"112","messageId":"113","endLine":12,"endColumn":16},{"ruleId":"110","severity":1,"message":"118","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":10,"column":6,"nodeType":"121","endLine":10,"endColumn":8,"suggestions":"122"},{"ruleId":"110","severity":1,"message":"123","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'CLEAR_PROFILE' is defined but never used.","'Spinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"'setAlert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"129","text":"130"},[379,381],"[getCurrentProfile]"]